<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Mapper">
    <resultMap id="BaseResultMap" type="com.mt.domain.Equipment">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="mac" jdbcType="VARCHAR" property="mac"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="classs" jdbcType="VARCHAR" property="classs"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="value" jdbcType="VARCHAR" property="value"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, mac, name, classs, type, value, state
  </sql>
    <select id="selectByExample" parameterType="com.mt.domain.EquipmentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from equipment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from equipment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from equipment
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.mt.domain.EquipmentExample">
        delete from equipment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mt.domain.Equipment">
    insert into equipment (id, mac, name, 
      classs, type, value, 
      state)
    values (#{id,jdbcType=INTEGER}, #{mac,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{classs,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR})
  </insert>
    <insert id="insertBase" parameterType="com.mt.domain.Equipment">
        insert into equipment(id,mac,type)
        values (#{id,jdbcType=INTEGER,#{mac},#{type})
    </insert>
    <insert id="insertSelective" parameterType="com.mt.domain.Equipment">
        insert into equipment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="mac != null">
                mac,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="classs != null">
                classs,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="value != null">
                value,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="mac != null">
                #{mac,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="classs != null">
                #{classs,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                #{value,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mt.domain.EquipmentExample" resultType="java.lang.Long">
        select count(*) from equipment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update equipment
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.mac != null">
                mac = #{record.mac,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.classs != null">
                classs = #{record.classs,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.value != null">
                value = #{record.value,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update equipment
        set id = #{record.id,jdbcType=INTEGER},
        mac = #{record.mac,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        classs = #{record.classs,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        value = #{record.value,jdbcType=VARCHAR},
        state = #{record.state,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mt.domain.Equipment">
        update equipment
        <set>
            <if test="mac != null">
                mac = #{mac,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="classs != null">
                classs = #{classs,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                value = #{value,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mt.domain.Equipment">
    update equipment
    set mac = #{mac,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      classs = #{classs,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>